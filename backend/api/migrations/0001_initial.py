# Generated by Django 3.0 on 2019-12-19 06:19

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CategoryMstr',
            fields=[
                ('created_on', models.IntegerField(blank=True, null=True)),
                ('modified_on', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('deleted_at', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('cate_id', models.AutoField(primary_key=True, serialize=False)),
                ('cate_name', models.CharField(max_length=250)),
            ],
            options={
                'db_table': 'Te_CategoryMstr',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MarketMstr',
            fields=[
                ('created_on', models.IntegerField(blank=True, null=True)),
                ('modified_on', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('deleted_at', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('market_id', models.AutoField(primary_key=True, serialize=False)),
                ('market_name', models.CharField(max_length=250)),
            ],
            options={
                'db_table': 'Te_MarketMstr',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StoreMstr',
            fields=[
                ('created_on', models.IntegerField(blank=True, null=True)),
                ('modified_on', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('deleted_at', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('store_id', models.AutoField(primary_key=True, serialize=False)),
                ('store_sk', models.IntegerField(blank=True, null=True)),
                ('store_bk', models.IntegerField(blank=True, null=True)),
                ('store_status', models.TextField(blank=True, null=True)),
                ('store_us_code', models.TextField(blank=True, null=True)),
                ('store_name_short', models.TextField(blank=True, null=True)),
                ('store_name', models.TextField(blank=True, null=True)),
                ('state_short', models.TextField(blank=True, null=True)),
                ('state_long', models.TextField(blank=True, null=True)),
                ('owernship_code', models.CharField(max_length=250)),
                ('ownership_description', models.TextField(blank=True, null=True)),
                ('ownership_condensed_description', models.TextField(blank=True, null=True)),
                ('licensee_num', models.IntegerField(blank=True, null=True)),
                ('licensee_name', models.TextField(blank=True, null=True)),
                ('licensee_name_short', models.TextField(blank=True, null=True)),
                ('licensee_personalname', models.TextField(blank=True, null=True)),
                ('operator_name', models.TextField(blank=True, null=True)),
                ('land_ownership_type', models.TextField(blank=True, null=True)),
                ('kitchen_type', models.TextField(blank=True, null=True)),
                ('store_type', models.TextField(blank=True, null=True)),
                ('dt_type', models.TextField(blank=True, null=True)),
                ('play_area_type', models.TextField(blank=True, null=True)),
                ('area_site_m2', models.FloatField(blank=True, null=True)),
                ('area_land_m2', models.FloatField(blank=True, null=True)),
                ('area_building_m2', models.FloatField(blank=True, null=True)),
                ('area_partyroom_m2', models.FloatField(blank=True, null=True)),
                ('area_parking_m2', models.FloatField(blank=True, null=True)),
                ('seats_inside', models.FloatField(blank=True, null=True)),
                ('seats_outside', models.FloatField(blank=True, null=True)),
                ('market_advertising', models.TextField(blank=True, null=True)),
                ('market_advertising_short', models.TextField(blank=True, null=True)),
                ('market_television', models.TextField(blank=True, null=True)),
                ('locality_description', models.TextField(blank=True, null=True)),
                ('consultant_advertising_market', models.TextField(blank=True, null=True)),
                ('operations_manager', models.TextField(blank=True, null=True)),
                ('operations_consultant', models.TextField(blank=True, null=True)),
                ('suburb', models.TextField(blank=True, null=True)),
                ('postcode', models.IntegerField(blank=True, null=True)),
                ('hierarchical_level_1_dsc', models.TextField(blank=True, null=True)),
                ('hierarchical_level_2_dsc', models.TextField(blank=True, null=True)),
                ('hierarchical_level_3_dsc', models.TextField(blank=True, null=True)),
                ('hierarchical_level_4_dsc', models.TextField(blank=True, null=True)),
                ('operator_eff_date', models.DateField(blank=True, null=True)),
                ('consultant_eff_date', models.DateField(blank=True, null=True)),
                ('operations_manager_eff_date', models.DateField(blank=True, null=True)),
                ('last_change_date', models.DateField(blank=True, null=True)),
                ('mc_cafe_open_date', models.DateField(blank=True, null=True)),
                ('rebuild_open_date', models.DateField(blank=True, null=True)),
                ('site_complete_date', models.DateField(blank=True, null=True)),
                ('store_open_date', models.DateField(blank=True, null=True)),
                ('store_close_date', models.DateField(blank=True, null=True)),
                ('drive_thru_open_date', models.DateField(blank=True, null=True)),
                ('drive_thru_close_date', models.DateField(blank=True, null=True)),
                ('ownership_effective_date', models.DateField(blank=True, null=True)),
                ('ground_break_date', models.DateField(blank=True, null=True)),
                ('valid_from_date', models.DateField(blank=True, null=True)),
                ('valid_to_date', models.DateField(blank=True, null=True)),
                ('market_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.MarketMstr')),
            ],
            options={
                'db_table': 'Te_StoreMstr',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TestMstr',
            fields=[
                ('created_on', models.IntegerField(blank=True, null=True)),
                ('modified_on', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('deleted_at', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('test_id', models.AutoField(primary_key=True, serialize=False)),
                ('test_name', models.CharField(max_length=250)),
                ('stage_id', models.IntegerField(blank=True, null=True)),
                ('market_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.MarketMstr')),
            ],
            options={
                'db_table': 'Te_TestMstr',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='VisresultTbl',
            fields=[
                ('created_on', models.IntegerField(blank=True, null=True)),
                ('modified_on', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('deleted_at', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('vresult_id', models.AutoField(primary_key=True, serialize=False)),
                ('week', models.IntegerField(blank=True, null=True)),
                ('standard_sale', models.FloatField(blank=True, null=True)),
                ('store_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.StoreMstr')),
                ('test_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.TestMstr')),
            ],
            options={
                'db_table': 'Te_VisresultTbl',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TestStoreTbl',
            fields=[
                ('created_on', models.IntegerField(blank=True, null=True)),
                ('modified_on', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('deleted_at', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('tstore_id', models.AutoField(primary_key=True, serialize=False)),
                ('store_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.StoreMstr')),
                ('test_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.TestMstr')),
            ],
            options={
                'db_table': 'Te_TeststoreTbl',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TargetMetricMstr',
            fields=[
                ('created_on', models.IntegerField(blank=True, null=True)),
                ('modified_on', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('deleted_at', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('tarmet_id', models.AutoField(primary_key=True, serialize=False)),
                ('tarmet_name', models.CharField(max_length=250)),
                ('market_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.MarketMstr')),
            ],
            options={
                'db_table': 'Te_TarMetMstr',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StoreMapTbl',
            fields=[
                ('created_on', models.IntegerField(blank=True, null=True)),
                ('modified_on', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('deleted_at', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('storemap_id', models.AutoField(primary_key=True, serialize=False)),
                ('test_id', models.CharField(max_length=250)),
                ('controlstore_id', models.IntegerField(blank=True, null=True)),
                ('store_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.StoreMstr')),
            ],
            options={
                'db_table': 'Te_StoremapTbl',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RecordMstr',
            fields=[
                ('created_on', models.IntegerField(blank=True, null=True)),
                ('modified_on', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('deleted_at', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('record_id', models.AutoField(primary_key=True, serialize=False)),
                ('test_id', models.CharField(max_length=250)),
                ('stage_id', models.IntegerField(blank=True, null=True)),
                ('stepper_id', models.IntegerField(blank=True, null=True)),
                ('record_value', models.CharField(max_length=250)),
                ('market_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.MarketMstr')),
            ],
            options={
                'db_table': 'Te_RecordMstr',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProductMstr',
            fields=[
                ('created_on', models.IntegerField(blank=True, null=True)),
                ('modified_on', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('deleted_at', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('pro_id', models.AutoField(primary_key=True, serialize=False)),
                ('pro_name', models.CharField(max_length=250)),
                ('cate_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.CategoryMstr')),
                ('market_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.MarketMstr')),
            ],
            options={
                'db_table': 'Te_ProductMstr',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MesuremetricMstr',
            fields=[
                ('created_on', models.IntegerField(blank=True, null=True)),
                ('modified_on', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('deleted_at', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('mesur_id', models.AutoField(primary_key=True, serialize=False)),
                ('mesur_name', models.CharField(max_length=250)),
                ('market_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.MarketMstr')),
            ],
            options={
                'db_table': 'Te_MesuremetricMstr',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MapVisresultTbl',
            fields=[
                ('created_on', models.IntegerField(blank=True, null=True)),
                ('modified_on', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('deleted_at', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('mapvresult_id', models.AutoField(primary_key=True, serialize=False)),
                ('week', models.IntegerField(blank=True, null=True)),
                ('controlstore_id', models.IntegerField(blank=True, null=True)),
                ('standard_sale', models.FloatField(blank=True, null=True)),
                ('store_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.StoreMstr')),
            ],
            options={
                'db_table': 'Te_MapVisresultTbl',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='LiftanaTbl',
            fields=[
                ('created_on', models.IntegerField(blank=True, null=True)),
                ('modified_on', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('deleted_at', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('liftana_id', models.AutoField(primary_key=True, serialize=False)),
                ('is_teststore', models.BooleanField(blank=True, null=True)),
                ('post_period', models.FloatField(blank=True, null=True)),
                ('per_period', models.FloatField(blank=True, null=True)),
                ('rank_no', models.IntegerField(blank=True, null=True)),
                ('lift', models.FloatField(blank=True, null=True)),
                ('mesur_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.MesuremetricMstr')),
                ('store_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.StoreMstr')),
                ('test_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.TestMstr')),
            ],
            options={
                'db_table': 'Te_LiftanaTbl',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HierachyMstr',
            fields=[
                ('created_on', models.IntegerField(blank=True, null=True)),
                ('modified_on', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('deleted_at', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('hier_id', models.AutoField(primary_key=True, serialize=False)),
                ('hier_name', models.CharField(max_length=250)),
                ('market_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.MarketMstr')),
            ],
            options={
                'db_table': 'Te_HierachyMstr',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FeatureMstr',
            fields=[
                ('created_on', models.IntegerField(blank=True, null=True)),
                ('modified_on', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('deleted_at', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('feat_id', models.AutoField(primary_key=True, serialize=False)),
                ('feat_name', models.CharField(max_length=250)),
                ('market_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.MarketMstr')),
            ],
            options={
                'db_table': 'Te_FeatureMstr',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CtrlstoreMatchTbl',
            fields=[
                ('created_on', models.IntegerField(blank=True, null=True)),
                ('modified_on', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('deleted_at', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('storematch_id', models.AutoField(primary_key=True, serialize=False)),
                ('controlstore_id', models.IntegerField(blank=True, null=True)),
                ('similar_val', models.FloatField(blank=True, null=True)),
                ('corr_val', models.FloatField(blank=True, null=True)),
                ('store_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.StoreMstr')),
                ('test_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.TestMstr')),
            ],
            options={
                'db_table': 'Te_CtlstorematchTbl',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='categorymstr',
            name='hier_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.HierachyMstr'),
        ),
        migrations.AddField(
            model_name='categorymstr',
            name='market_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.MarketMstr'),
        ),
    ]
